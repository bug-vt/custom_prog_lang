var start

func main
{
  param argc
  var arr_ptr
  ref arr_ptr, start
  inc arr_ptr

  print "Before: "
  push arr_ptr
  push argc
  call printArray

  push arr_ptr
  push argc
  call insertion_sort

  print "After:  "
  push arr_ptr
  push argc
  call printArray
}

func insertion_sort
{
  param n
  param arr_base
  
  var i 
  mov i, 1

outer_loop:
  var key 
  lw key, arr_base, i       ; record the element that we want to
                            ; insert into currently sorted subarray
  var j                     
  mov j, i
  dec j

inner_loop:                 ; iterate over the subarray and find the
                            ; position where element can be insert into.
  var elem
  lw elem, arr_base, j      ; elem = array[j]

  var arr_j                 ; coerce array[j] to int
  mov arr_j, 0
  add arr_j, elem

  je j, -1, skip             
  var condition
  sle condition, arr_j, key
  je condition, 1, skip   
  
  var new_j
  mov new_j, j
  inc new_j
  sw arr_base, new_j, arr_j
  dec j
  jmp inner_loop

skip:                       ; insert the element into the found position
                            ; which grow the sorted subarray 
  mov new_j, j
  inc new_j
  sw arr_base, new_j, key
  
  inc i
  slt condition, i, n
  je condition, 1, outer_loop       ; move onto next element
}

func printArray
{
  param size
  param base 

  var count
  mov count, 0

loop:
  var elem
  lw elem, base, count
  print elem 
  print " "
  inc count
  var condition
  slt condition, count, size
  je condition, 1, loop
  print "\n"
}
